def label = "weapp-${UUID.randomUUID().toString()}"
podTemplate(
    name:'weapp-develop',
    namespace:'jenkins-namespace',
    serviceAccount:'jenkins',
    label:label,
    containers:[
        containerTemplate(name: 'tool', image:'registry.cn-hangzhou.aliyuncs.com/podtemplate/base-image:latest',command:'cat',ttyEnabled: true)
    ],
    volumes:[
        hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
        nfsVolume(mountPath: '/root/.m2', readOnly: false, serverAddress: '192.168.0.102', serverPath: '/var/nfs/jenkins_slave/.m2'),
        nfsVolume(mountPath: '/home/jenkins/.kube', readOnly: false, serverAddress: '192.168.0.102', serverPath: '/var/nfs/jenkins_slave/.kube')
    ]
){
    node(label){
        stage('get code') {
            git branch: 'spring-cloud', url: 'https://github.com/fuyoushengwu/weapp_server.git'
        }

        stage('code analysis') {
            container('tool'){
                sh """
                    mvn clean compile sonar:sonar -Dsonar.projectKey=cn.aijiamuyingfang:cn.aijiamuyingfang -Dsonar.organization=fuyoushengwu-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=033ad430ca4c06abfa5fe9f078d3a8de2ebe62dd -f sources/pom.xml
                """
            }
        }

        stage('package') {
            container('tool') {
                withCredentials([usernamePassword(credentialsId: 'f23ceb70-244e-4a17-a8a4-a1c0c13c23de', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh """
                        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD registry.cn-hangzhou.aliyuncs.com
                    """
                }
                def imageArr = sh (
                    script:"docker images --filter=reference='registry.cn-hangzhou.aliyuncs.com/fuyoushengwu/*:*' --format={{.Repository}}:{{.Tag}}",
                    returnStdout: true
                ).trim().split()
                for(int i=0;i<imageArr.size();i++){
                    def image = imageArr[i].trim()
                    if(!"".equals(image)) {
                        sh """
                            docker rmi $image
                        """
                    }
                }

                sh """
                    mvn clean install -Dmaven.test.skip=true -f sources/pom.xml
                """

                def newImageArr = sh (
                    script:"docker images --filter=reference='registry.cn-hangzhou.aliyuncs.com/fuyoushengwu/*:*' --format={{.Repository}}:{{.Tag}}",
                    returnStdout: true
                ).trim().split()

                for(int i=0;i<newImageArr.size();i++){
                    def image = newImageArr[i].trim()
                    if(!"".equals(image)) {
                        sh """
                            docker push $image
                        """
                    }
                }
            }
        }

        stage('test'){
            container('tool') {
                sh """
                    kubectl apply -f build/weapp_test/
                """
                sleep 120
                
                sh """
                    mvn clean test -f sources/pom.xml
                """
            }
        }
    }
}